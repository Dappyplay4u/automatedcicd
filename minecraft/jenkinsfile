pipeline {
    agent any

    environment {
        // Credentials for AWS and Docker
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
        awsAccountId = '568170370118'
        region = 'us-east-1'
        repositoryName = 'minecraft'
        dockerImageTag = "${BUILD_NUMBER}"
        ecrRegistry = "${awsAccountId}.dkr.ecr.${region}.amazonaws.com"
        SONAR_URL = "http://44.204.109.146:9000/" // URL for SonarQube
        clusterName = 'minecraft-eks-server'
    }

    tools {
        // Define tools used in the pipeline
        terraform 'terraform'
        maven 'localMaven'
        jdk 'localJdk'
    }

    stages {
        stage('Git Checkout') {
            steps {
                // Clone the application code from GitHub
                echo 'Cloning the application code...'
                git branch: 'master', url: 'https://github.com/Dappyplay4u/automatedcicd.git'
            }
        }

        stage('Approval to Begin') {
            steps {
                // Request manual approval before proceeding
                input "Please review the changes and approve to continue"
            }
        }

        stage('Build and Test') {
            steps {
                // Build and test the Maven project
                sh 'cd minecraft && mvn -U clean package'
            }
        }

        stage('Unit Test') {
            steps {
                // Run unit tests
                sh 'cd minecraft && mvn test'
            }
        }

        stage('Integration Test') {
            steps {
                // Run integration tests
                sh 'cd minecraft && mvn verify -DskipUnitTests'
            }
        }

        stage('Checkstyle Code Analysis') {
            steps {
                // Perform code style analysis
                sh 'cd minecraft && mvn checkstyle:checkstyle'
            }
            post {
                // Post-processing step for success
                success {
                    echo 'Checkstyle analysis completed successfully'
                }
            }
        }

        stage('Static Code Analysis') {
            steps {
                // Run static code analysis with SonarQube
                withCredentials([string(credentialsId: 'SonarQube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh "cd minecraft && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}"
                }
            }
        }

        stage('Install docker') {
            steps {
                sh '''
                    sudo yum install docker -y
                    sudo systemctl start docker
                    sudo systemctl  enable docker
                    sudo usermod -a -G docker jenkins
                '''
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    // Build the Docker image
                    sh "cd minecraft && docker build -t ${repositoryName}:${dockerImageTag} ."

                    // Authenticate and push the Docker image to ECR
                    sh "aws ecr get-login-password --region ${region} | docker login --username AWS --password-stdin ${ecrRegistry}"
                    sh "docker tag ${repositoryName}:${dockerImageTag} ${ecrRegistry}/${repositoryName}:${dockerImageTag}"
                    sh "docker push ${ecrRegistry}/${repositoryName}:${dockerImageTag}"
                    sh "docker rmi ${ecrRegistry}/${repositoryName}:${dockerImageTag}"
                    sh "docker rmi ${repositoryName}:${dockerImageTag}"
                }
            }
        }

        stage('Kubernetes Deploy') {
            steps {
                withKubeConfig(credentialsId: 'K8S', serverUrl: '') {
                    sh "aws eks update-kubeconfig --name ${clusterName} --region ${region}"
                    dir('minecraft') {
                        sh 'kubectl apply -f minecraft-deployment-service.yml'
                        sh 'kubectl apply -f minecraft-namespace.yaml'
                        sh 'kubectl apply -f minecraft-pv-pvc.yaml'
                    }
                }
            }
        }

        
    post {
        // Post-execution step for success
        success {
            echo 'Minecraft Has been Succesfully Deployed!'
        }
    }
}
